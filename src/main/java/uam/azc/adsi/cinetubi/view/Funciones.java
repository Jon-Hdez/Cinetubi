/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package uam.azc.adsi.cinetubi.view;

import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JPanel;
import uam.azc.adsi.cinetubi.controller.FuncionController;
import uam.azc.adsi.cinetubi.dao.FuncionesDAO;
import uam.azc.adsi.cinetubi.dao.PeliculaDAO;
import uam.azc.adsi.cinetubi.model.Funcion;
import uam.azc.adsi.cinetubi.util.DatabaseConnection;

/**
 *
 * @author vicen
 */
public class Funciones extends javax.swing.JPanel {
     private Map<String, List<Funcion>> funcionesMap;
    Funcion res=new Funcion();
    /**
     * Creates new form Funciones
     */
    public Funciones() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    void countruir(){
         try {
             Connection connection = null;
             DatabaseConnection dbConnection = DatabaseConnection.getInstance();
             // Obtener la conexión desde DataBaseConnection
             connection = dbConnection.getConnection();
             FuncionesDAO f = new FuncionesDAO();
             
             List<Funcion> funciones = f.getAllFuncion();
             JPanel panelPrincipal = new JPanel();
             panelPrincipal.setLayout(new BoxLayout(panelPrincipal, BoxLayout.Y_AXIS)); // Panel principal en columna
             funcionesMap = new HashMap<>();
            
       
            // Obtener la conexión desde DataBaseConnection
            connection = dbConnection.getConnection();
            PeliculaDAO peli = new PeliculaDAO(connection);
             
             // Agrupar funciones por nombre de la película
             for (Funcion funcion : funciones) {
                 String nombrePelicula = peli.searchMovie(funcion.getId_pelicula()).getTitulo();
                 funcionesMap.computeIfAbsent(nombrePelicula, k -> new ArrayList<>()).add(funcion);
             }
             
             // Crear un panel por cada grupo de funciones con el mismo nombre de película
             for (Map.Entry<String, List<Funcion>> entry : funcionesMap.entrySet()) {
                 String nombrePelicula = entry.getKey();
                 List<Funcion> funcionesPorNombre = entry.getValue();
                 
                 // Crear un panel para la película
                 JPanel panelPelicula = new JPanel();
                 panelPelicula.setLayout(new BoxLayout(panelPelicula, BoxLayout.Y_AXIS));
                 panelPelicula.setBorder(BorderFactory.createTitledBorder("Película: " + nombrePelicula));
                 
                 // Panel de horarios (español y inglés)
                 JPanel panelHorarios = new JPanel(new GridLayout(0, 2)); // Dos columnas para los horarios
                 
                 // Separar funciones en Español e Inglés
                 JPanel panelEspanol = new JPanel();
                 panelEspanol.setLayout(new BoxLayout(panelEspanol, BoxLayout.Y_AXIS));
                 panelEspanol.setBorder(BorderFactory.createTitledBorder("Español"));
                 
                 JPanel panelIngles = new JPanel();
                 panelIngles.setLayout(new BoxLayout(panelIngles, BoxLayout.Y_AXIS));
                 panelIngles.setBorder(BorderFactory.createTitledBorder("Inglés"));
                 
                 // Añadir los horarios a los paneles correspondientes
                 for (Funcion funcion : funcionesPorNombre) {
                     JButton botonHorario = new JButton(funcion.getHorario());
                     botonHorario.addActionListener((ActionEvent e) -> {
                         // Acción al presionar el botón
                         res=funcion;
                     });
                     
                     // Clasificar por idioma
                     if (funcion.getIdioma().equalsIgnoreCase("Español")) {
                         panelEspanol.add(botonHorario);
                     } else if (funcion.getIdioma().equalsIgnoreCase("Inglés")) {
                         panelIngles.add(botonHorario);
                     }
                 }
                 
                 // Añadir los paneles de horarios al panel de película
                 panelHorarios.add(panelEspanol);
                 panelHorarios.add(panelIngles);
                 panelPelicula.add(panelHorarios);
                 
                 // Añadir el panel de la película al panel principal
                 panelPrincipal.add(panelPelicula);
             }} catch (SQLException ex) {
             Logger.getLogger(Funciones.class.getName()).log(Level.SEVERE, null, ex);
         }
    }


}
